CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE,
    password_hash TEXT NOT NULL,
    phone VARCHAR(20) NOT NULL UNIQUE,
    profile_image TEXT,
    is_provider BOOLEAN DEFAULT FALSE,
    is_agent BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    translated_name JSON DEFAULT NULL,
    parent_id INT DEFAULT NULL,
    FOREIGN KEY (parent_id) REFERENCES categories(id)
);

CREATE TABLE listings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    category_id INT NOT NULL,
    listing_type ENUM('property', 'vehicle', 'service') NOT NULL,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    price_per_hour DECIMAL(10,2),
    price_per_day DECIMAL(10,2),
    price_per_half_night DECIMAL(10,2),
    unit_type ENUM('hour', 'day', 'night', 'appointment') DEFAULT 'hour',
    is_hourly BOOLEAN DEFAULT TRUE,
    booking_type ENUM('hourly', 'daily', 'night', 'appointment') DEFAULT 'hourly',
    slot_duration INT, -- in minutes, for cars/appointments if needed
    location TEXT,
    latitude DECIMAL(10,6),
    longitude DECIMAL(10,6),
    instant_booking BOOLEAN DEFAULT FALSE,
    cancellation_policy ENUM('flexible', 'moderate', 'strict', 'non_refundable') DEFAULT 'moderate',
    rating DECIMAL(3,2),
    review_count INT DEFAULT 0,
    active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- New table for pricing options
CREATE TABLE pricing_options (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    unit_type ENUM('hour', 'day', 'night', 'appointment') NOT NULL,
    duration INT NOT NULL DEFAULT 1,
    minimum_units INT NOT NULL DEFAULT 1,
    maximum_units INT NULL,
    is_default BOOLEAN DEFAULT FALSE,
    description VARCHAR(255) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    INDEX idx_pricing_options_listing_id (listing_id)
);

CREATE TABLE listing_photos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    image_url TEXT,
    is_cover BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);

CREATE TABLE listing_property_details (
    listing_id INT PRIMARY KEY,
    max_guests INT,
    bedrooms INT,
    beds INT,
    bathrooms DECIMAL(3,1),
    property_type ENUM('chalet', 'apartment', 'room', 'house', 'container', 'hotel', 'pool', 'other') NOT NULL,
    room_type VARCHAR(50),
    min_nights INT DEFAULT 1,
    max_nights INT,
    night_check_in_time TIME DEFAULT '18:00:00', -- Default check-in time for night bookings (e.g., 6 PM)
    night_check_out_time TIME DEFAULT '06:00:00', -- Default check-out time for night bookings (e.g., 6 AM)
    day_check_in_time TIME DEFAULT '00:00:00', -- Default check-in time for day bookings (e.g., midnight)
    day_check_out_time TIME DEFAULT '23:59:59', -- Default check-out time for day bookings (e.g., 11:59 PM)
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);

CREATE TABLE listing_car_details (
    listing_id INT PRIMARY KEY,
    brand VARCHAR(100),
    model VARCHAR(100),
    year INT,
    transmission ENUM('automatic', 'manual'),
    seats INT,
    fuel_type VARCHAR(50),
    mileage INT,
    min_rental_duration INT DEFAULT 60, -- Minimum rental duration in minutes (e.g., 1 hour)
    max_rental_duration INT, -- Maximum rental duration in minutes (optional)
    hourly_increment INT DEFAULT 60, -- Rental duration increment in minutes (e.g., can book in 1-hour increments)
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);

CREATE TABLE availability (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    date DATE NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    end_date DATE NULL,
    is_available BOOLEAN DEFAULT TRUE,
    is_overnight BOOLEAN DEFAULT FALSE,
    is_recurring BOOLEAN DEFAULT FALSE,
    reason TEXT,
    recurrence_pattern ENUM('daily', 'weekly', 'weekdays', 'weekends') NULL,
    slot_duration INT, -- in minutes, for appointment-based services
    booking_type ENUM('hourly', 'daily', 'night', 'appointment') NULL, -- to override listing's default booking type if needed
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    INDEX idx_availability_listing_date (listing_id, date),
    INDEX idx_availability_listing_date_time (listing_id, date, start_time, end_time)
);

CREATE TABLE bookings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    user_id INT NOT NULL,
    host_id INT NULL, -- For appointment bookings, which host is assigned
    start_datetime DATETIME NOT NULL,
    end_datetime DATETIME NOT NULL,
    booking_type ENUM('hourly', 'daily', 'night', 'appointment') DEFAULT 'hourly',
    guests_count INT DEFAULT 1,
    total_price DECIMAL(10,2) NOT NULL,
    deposit_amount DECIMAL(10,2) DEFAULT 0,
    remaining_amount DECIMAL(10,2) DEFAULT 0,
    platform_commission DECIMAL(10,2) DEFAULT 0,
    provider_earnings DECIMAL(10,2) DEFAULT 0,
    user_service_fee DECIMAL(10,2) DEFAULT 0,
    status ENUM('pending', 'confirmed', 'cancelled', 'completed') DEFAULT 'pending',
    confirmed_by_user_id INT NULL, -- who confirmed the booking
    confirmed_at DATETIME NULL,    -- when it was confirmed
    payment_status ENUM('unpaid', 'deposit_paid', 'fully_paid', 'refunded') DEFAULT 'unpaid',
    deposit_deadline DATETIME,
    auto_cancel_at DATETIME,
    notes TEXT,
    pricing_option_id INT NULL,
    units_booked INT DEFAULT 1,
    appointment_slot_id INT NULL, -- Reference to predefined appointment slot if applicable
    hold_id INT NULL, -- Reference to reservation hold if this booking was created from a hold
    check_in_time TIME NULL, -- Actual check-in time, can differ from start_datetime
    check_out_time TIME NULL, -- Actual check-out time, can differ from end_datetime
    ticket_number INT NULL, -- For appointment bookings - queue position
    ticket_status ENUM('waiting', 'called', 'served', 'no_show') DEFAULT 'waiting', -- Ticket queue status
    served_at DATETIME NULL, -- When the client was actually served
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (host_id) REFERENCES users(id),
    FOREIGN KEY (confirmed_by_user_id) REFERENCES users(id),
    FOREIGN KEY (pricing_option_id) REFERENCES pricing_options(id),
    FOREIGN KEY (appointment_slot_id) REFERENCES appointment_slots(id),
    INDEX idx_bookings_listing_dates (listing_id, start_datetime, end_datetime),
    INDEX idx_bookings_user (user_id),
    INDEX idx_bookings_host (host_id),
    INDEX idx_bookings_status (status),
    INDEX idx_bookings_ticket (listing_id, host_id, start_datetime, ticket_number),
    INDEX idx_bookings_confirmed_by (confirmed_by_user_id),
    UNIQUE KEY unique_ticket_per_slot (listing_id, host_id, start_datetime, ticket_number)
);


CREATE TABLE payments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT NOT NULL,
    method ENUM('card', 'cash', 'bank_transfer', 'other') NOT NULL,
    amount DECIMAL(10,2),
    deposit_amount DECIMAL(10,2) DEFAULT 0,
    remaining_amount DECIMAL(10,2) DEFAULT 0,
    payment_location_id INT,
    payment_deadline DATETIME,
    status ENUM('pending', 'deposit_paid', 'fully_paid', 'failed', 'refunded') DEFAULT 'pending',
    transaction_id VARCHAR(255),
    lahza_reference VARCHAR(255),
    lahza_access_code VARCHAR(255),
    currency VARCHAR(10) DEFAULT 'ILS',
    payment_method VARCHAR(50),
    paid_at TIMESTAMP NULL,
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE
);

CREATE TABLE payment_locations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    address TEXT NOT NULL,
    city VARCHAR(100) NOT NULL,
    working_hours TEXT,
    contact_phone VARCHAR(20),
    is_active BOOLEAN DEFAULT TRUE
);

CREATE TABLE commission_settings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    category_id INT DEFAULT NULL,
    provider_commission_percent DECIMAL(5,2),
    user_fee_percent DECIMAL(5,2),
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

CREATE TABLE payouts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    provider_id INT NOT NULL,
    booking_id INT NOT NULL,
    amount DECIMAL(10,2),
    status ENUM('pending', 'paid', 'failed') DEFAULT 'pending',
    payout_method VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (provider_id) REFERENCES users(id),
    FOREIGN KEY (booking_id) REFERENCES bookings(id)
);

CREATE TABLE messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL,
    receiver_id INT NOT NULL,
    listing_id INT,
    message TEXT,
    is_read BOOLEAN DEFAULT FALSE,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES users(id),
    FOREIGN KEY (receiver_id) REFERENCES users(id)
);

CREATE TABLE reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    reviewer_id INT NOT NULL,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id),
    FOREIGN KEY (reviewer_id) REFERENCES users(id)
);

CREATE TABLE wishlists (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    listing_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, listing_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);


CREATE TABLE amenities (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    icon VARCHAR(100),
    category VARCHAR(50),
    description TEXT
);

CREATE TABLE listing_amenities (
    listing_id INT NOT NULL,
    amenity_id INT NOT NULL,
    PRIMARY KEY (listing_id, amenity_id),
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    FOREIGN KEY (amenity_id) REFERENCES amenities(id) ON DELETE CASCADE
);

CREATE TABLE house_rules (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    icon VARCHAR(100),
    description TEXT
);

CREATE TABLE listing_house_rules (
    listing_id INT NOT NULL,
    rule_id INT NOT NULL,
    allowed BOOLEAN DEFAULT TRUE,
    description TEXT,
    PRIMARY KEY (listing_id, rule_id),
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    FOREIGN KEY (rule_id) REFERENCES house_rules(id) ON DELETE CASCADE
);

CREATE TABLE safety_features (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    icon VARCHAR(100),
    description TEXT
);

CREATE TABLE listing_safety_features (
    listing_id INT NOT NULL,
    feature_id INT NOT NULL,
    PRIMARY KEY (listing_id, feature_id),
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    FOREIGN KEY (feature_id) REFERENCES safety_features(id) ON DELETE CASCADE
);

CREATE TABLE host_profiles (
    user_id INT PRIMARY KEY,
    bio TEXT,
    date_of_birth DATE,
    languages JSON,
    response_time VARCHAR(50),
    response_rate DECIMAL(5,2),
    acceptance_rate DECIMAL(5,2),
    is_superhost BOOLEAN DEFAULT FALSE,
    identity_verified BOOLEAN DEFAULT FALSE,
    work VARCHAR(255),
    education VARCHAR(255),
    joined_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE provider_qualifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    issuing_organization VARCHAR(255),
    issue_date DATE,
    expiration_date DATE,
    credential_id VARCHAR(100),
    credential_url VARCHAR(255),
    description TEXT,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE provider_portfolio (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    title VARCHAR(255),
    description TEXT,
    image_url TEXT NOT NULL,
    sort_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE listing_reports (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    user_id INT NOT NULL,
    reason ENUM('inappropriate', 'scam', 'not_as_described', 'offensive', 'other') NOT NULL,
    description TEXT,
    status ENUM('pending', 'reviewed', 'resolved', 'dismissed') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    resolved_at TIMESTAMP NULL,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE cancellation_policies (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name ENUM('flexible', 'moderate', 'strict', 'non_refundable') NOT NULL,
    description TEXT NOT NULL,
    refund_before_days INT NOT NULL,
    refund_before_percentage INT NOT NULL,
    refund_after_percentage INT NOT NULL
);

-- Special pricing table for date-specific and recurring pricing
CREATE TABLE special_pricing (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    date DATE NULL,
    price DECIMAL(10,2) NOT NULL,
    pricing_option ENUM('per_hour', 'per_day', 'per_night') NOT NULL,
    reason VARCHAR(255),
    is_recurring BOOLEAN DEFAULT FALSE,
    day_of_week ENUM('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday') NULL,
    start_date DATE NULL,
    end_date DATE NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    INDEX idx_special_pricing_listing_date (listing_id, date),
    INDEX idx_special_pricing_listing_recurring (listing_id, is_recurring, day_of_week)
);

-- Add service-specific fields for different categories
CREATE TABLE service_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    service_type ENUM('makeup', 'hair', 'nails', 'skin_care', 'photography', 'cleaning', 'personal_training', 'medical', 'massage', 'other') NOT NULL,
    service_duration INT NOT NULL, -- in minutes, required for appointment booking
    preparation_time INT DEFAULT 0, -- in minutes
    cleanup_time INT DEFAULT 0, -- in minutes
    brings_equipment BOOLEAN DEFAULT FALSE,
    remote_service BOOLEAN DEFAULT FALSE,
    experience_years INT,
    appointment_required BOOLEAN DEFAULT TRUE,
    default_slot_duration INT, -- in minutes, for predefined appointment slots
    max_concurrent_bookings INT DEFAULT 1, -- how many appointments can be booked in the same time slot
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    INDEX idx_service_details_listing (listing_id)
);


CREATE TABLE blocked_dates (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    start_datetime DATETIME NOT NULL,
    end_datetime DATETIME NOT NULL,
    reason TEXT,
    is_overnight BOOLEAN DEFAULT FALSE,
    primary_date DATE NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);

CREATE TABLE listing_settings (
    listing_id INT PRIMARY KEY,
    availability_mode ENUM('available-by-default', 'blocked-by-default') DEFAULT 'blocked-by-default',
    min_advance_booking_hours INT DEFAULT 24,
    max_advance_booking_days INT DEFAULT 365,
    instant_booking_enabled BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);

CREATE TABLE listing_venue_details (
    listing_id INT PRIMARY KEY,
    venue_type ENUM('wedding_hall', 'conference_room', 'event_space', 'other') NOT NULL,
    max_capacity INT,
    indoor_space_sqm DECIMAL(10,2),
    outdoor_space_sqm DECIMAL(10,2),
    has_catering BOOLEAN DEFAULT FALSE,
    has_parking BOOLEAN DEFAULT FALSE,
    has_sound_system BOOLEAN DEFAULT FALSE,
    has_stage BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);

CREATE TABLE listing_subscription_details (
    listing_id INT PRIMARY KEY,
    subscription_type ENUM('gym', 'club', 'spa', 'other') NOT NULL,
    duration_days INT,
    recurring BOOLEAN DEFAULT FALSE,
    includes_trainer BOOLEAN DEFAULT FALSE,
    includes_classes BOOLEAN DEFAULT FALSE,
    max_visits_per_week INT,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE
);

-- Table for temporary reservation holds to prevent double booking
CREATE TABLE reservation_holds (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    user_id INT NOT NULL,
    start_datetime DATETIME NOT NULL,
    end_datetime DATETIME NOT NULL,
    booking_type ENUM('hourly', 'daily', 'night', 'appointment') NOT NULL,
    expires_at DATETIME NOT NULL, -- When this hold expires if not confirmed
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_reservation_holds_listing_dates (listing_id, start_datetime, end_datetime),
    INDEX idx_reservation_holds_expiry (expires_at)
);

-- Table for predefined appointment slots (especially for service providers)
CREATE TABLE appointment_slots (
    id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT NOT NULL,
    day_of_week ENUM('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday') NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    is_available BOOLEAN DEFAULT TRUE,
    max_bookings INT DEFAULT 1, -- For group appointments
    slot_duration INT NOT NULL, -- in minutes
    buffer_before INT DEFAULT 0, -- buffer time before appointment in minutes
    buffer_after INT DEFAULT 0, -- buffer time after appointment in minutes
    is_recurring BOOLEAN DEFAULT TRUE,
    start_date DATE NULL, -- if not recurring, specific date
    end_date DATE NULL, -- if temporary schedule
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    INDEX idx_appointment_slots_listing_day (listing_id, day_of_week)
);

-- Table for host availability across multiple appointment-based listings
CREATE TABLE host_availability (
    id INT AUTO_INCREMENT PRIMARY KEY,
    host_id INT NOT NULL,
    listing_id INT NOT NULL,
    date DATE NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    is_available BOOLEAN DEFAULT TRUE,
    max_concurrent_appointments INT DEFAULT 1, -- How many appointments can be handled simultaneously
    notes TEXT NULL,
    is_recurring BOOLEAN DEFAULT FALSE,
    day_of_week ENUM('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday') NULL,
    recurrence_end_date DATE NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (host_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    INDEX idx_host_availability_host_date (host_id, date),
    INDEX idx_host_availability_listing_date (listing_id, date),
    INDEX idx_host_availability_host_listing (host_id, listing_id),
    UNIQUE KEY unique_host_listing_datetime (host_id, listing_id, date, start_time, end_time)
);

-- Table for tracking appointment queue/tickets
CREATE TABLE appointment_queue (
    id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT NOT NULL,
    listing_id INT NOT NULL,
    host_id INT NOT NULL,
    slot_datetime DATETIME NOT NULL,
    ticket_number INT NOT NULL,
    queue_status ENUM('waiting', 'called', 'in_progress', 'completed', 'no_show', 'cancelled') DEFAULT 'waiting',
    called_at DATETIME NULL,
    started_at DATETIME NULL,
    completed_at DATETIME NULL,
    estimated_duration INT NULL, -- in minutes
    actual_duration INT NULL, -- in minutes
    notes TEXT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE,
    FOREIGN KEY (listing_id) REFERENCES listings(id) ON DELETE CASCADE,
    FOREIGN KEY (host_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_appointment_queue_slot (listing_id, host_id, slot_datetime),
    INDEX idx_appointment_queue_ticket (listing_id, host_id, slot_datetime, ticket_number),
    INDEX idx_appointment_queue_status (queue_status),
    UNIQUE KEY unique_ticket_per_slot (listing_id, host_id, slot_datetime, ticket_number)
);



-- Insert main categories first
INSERT INTO categories (name, translated_name) VALUES 
('Property', '{"ar": "أماكن", "he": "מקומות"}'),
('Vehicle', '{"ar": "سيارات", "he": "רכבים להשכרה"}'),
('Service', '{"ar": "خدمات", "he": "שירותים"}');
-- ('Subscription', '{"ar": "اشتراكات", "he": "מנויים"}');

-- Property subcategories (parent_id = 1)
INSERT INTO categories (name, translated_name, parent_id) VALUES 
('Villa', '{"ar": "فيلا", "he": "וִילָה"}', 1),
('Chalet', '{"ar": "شاليه", "he": "צ׳לט"}', 1),
('Apartment', '{"ar": "شقة", "he": "דירה"}', 1),
('Room', '{"ar": "غرفة", "he": "חדר"}', 1),
('House', '{"ar": "منزل", "he": "בית"}', 1),
('Container', '{"ar": "كونتينر", "he": "קונטיינר"}', 1),
('Hotel', '{"ar": "فندق", "he": "מלון"}', 1),
('Pool', '{"ar": "مسبح", "he": "בריכה"}', 1),
('Wedding Hall', '{"ar": "قاعة أفراح", "he": "אולם חתונות"}', 1),
('Conference Room', '{"ar": "قاعة مؤتمرات", "he": "חדר כנסים"}', 1),
('Event Space', '{"ar": "مساحة فعاليات", "he": "מרחב לאירועים"}', 1);

-- Vehicle subcategories (parent_id = 2)
INSERT INTO categories (name, translated_name, parent_id) VALUES
('Toyota', '{"ar": "تويوتا", "he": "טויוטה"}', 2),
('Honda', '{"ar": "هوندا", "he": "הונדה"}', 2),
('Ford', '{"ar": "فورد", "he": "פורד"}', 2),
('BMW', '{"ar": "بي إم دبليو", "he": "בי.מ.וו"}', 2),
('Mercedes-Benz', '{"ar": "مرسيدس-بنز", "he": "מרצדס-בנץ"}', 2),
('Audi', '{"ar": "أودي", "he": "אאודי"}', 2),
('Volkswagen', '{"ar": "فولكس فاجن", "he": "פולקסווגן"}', 2),
('Nissan', '{"ar": "نيسان", "he": "ניסאן"}', 2),
('Hyundai', '{"ar": "هيونداي", "he": "יונדאי"}', 2),
('Kia', '{"ar": "كيا", "he": "קיה"}', 2),
('Chevrolet', '{"ar": "شيفرولييه", "he": "שברולט"}', 2),
('Tesla', '{"ar": "تسلا", "he": "טסלה"}', 2);

-- Service subcategories (parent_id = 3)
INSERT INTO categories (name, translated_name, parent_id) VALUES 
('Makeup', '{"ar": "مكياج", "he": "איפור"}', 3),
('Hair Styling', '{"ar": "تصفيف شعر", "he": "עיצוב שיער"}', 3),
('Nail Care', '{"ar": "العناية بالأظافر", "he": "טיפוח ציפורניים"}', 3),
('Photography', '{"ar": "استوديو تصوير", "he": "צילום"}', 3),
('House Cleaning', '{"ar": "تنظيف منزل", "he": "ניקיון בית"}', 3),
('Personal Training', '{"ar": "مدرب شخصي", "he": "אימון אישי"}', 3),
('Medical Service', '{"ar": "خدمة طبية", "he": "שירות רפואי"}', 3),
('Massage', '{"ar": "مساج", "he": "עיסוי"}', 3);

-- Subscription subcategories (parent_id = 4)
INSERT INTO categories (name, translated_name, parent_id) VALUES 
('Gym', '{"ar": "صالة رياضية", "he": "חדר כושר"}', 4),
('Club', '{"ar": "نادي", "he": "מועדון"}', 4),
('Spa', '{"ar": "سبا", "he": "ספא"}', 4),
('Co-working Space', '{"ar": "مساحة عمل مشتركة", "he": "חלל עבודה משותף"}', 4);


---------------------------------------------------------------

INSERT INTO amenities (name, icon, category, description) VALUES
('Wi-Fi', 'wifi', 'property', 'Free wireless internet access'),
('Air Conditioning', 'ac', 'property', 'Cool or heat the space with AC'),
('Swimming Pool', 'pool', 'property', 'Access to a private or shared pool'),
('Parking', 'parking', 'property', 'Free on-site parking'),
('Kitchen', 'kitchen', 'property', 'Guests can cook their own meals'),
('TV', 'tv', 'property', 'Flat screen TV with streaming options'),
('Washer', 'washer', 'property', 'Laundry washer available'),
('Hot Tub', 'hot_tub', 'property', 'Private or shared hot tub'),
('Elevator', 'elevator', 'property', 'Elevator available in building'),
('Gym', 'gym', 'property', 'Access to a gym or fitness area');


INSERT INTO house_rules (name, icon, description) VALUES
('No Smoking', 'no_smoking', 'Smoking is not allowed inside the property'),
('No Pets', 'no_pets', 'Pets are not allowed'),
('No Parties', 'no_parties', 'No events or parties allowed'),
('Children Allowed', 'child_friendly', 'Children are welcome'),
('Check-out Before 8AM', 'clock', 'Guests must check out before 8:00 AM');


INSERT INTO safety_features (name, icon, description) VALUES
('Smoke Detector', 'smoke_detector', 'Detects smoke in case of fire'),
('Fire Extinguisher', 'fire_extinguisher', 'Device to extinguish small fires'),
('First Aid Kit', 'first_aid', 'Kit for minor injuries'),
('Security Camera', 'camera', 'External cameras for security purposes'),
('Carbon Monoxide Detector', 'co_detector', 'Detects harmful CO gas');



INSERT INTO cancellation_policies (name, description, refund_before_days, refund_before_percentage, refund_after_percentage) VALUES
('flexible', 'Full refund 1 day prior to arrival, except fees', 1, 100, 0),
('moderate', 'Full refund 5 days prior to arrival, except fees', 5, 100, 50),
('strict', '50% refund up to 7 days before arrival, except fees', 7, 50, 0),
('non_refundable', 'No refund available after booking confirmation', 0, 0, 0);